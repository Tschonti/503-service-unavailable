@startuml
'https://plantuml.com/class-diagram
skinparam classAttributeIconSize 0

together {
    class Resource {
        -amount: int
    }

    enum ResourceType {
        AminoAcid
        Nucleotide
    }
    'class AminoAcid extends Resource {
'
    '}
    'class Nucleotide extends Resource {
'
    '}
    Resource *-- "-type, 1" ResourceType

}

together {
    abstract class Agent implements Effect{
    {static} create(): Agent

    }
    class AmnesiaVirus extends Agent{

    }

    class StunVirus extends Agent{

    }
    class VitusDanceVirus extends Agent{

    }
    class Vaccine extends Agent{

    }
}
together {

    class Virologist {

    }

    class Inventory {

    }
    interface Effect {

    }
    class GeneticCode {

    }

    Virologist *-- "-inventory, 1" Inventory
    Virologist *-- "-learntCodes, 0..*" GeneticCode
    Virologist <-- "-activeEffects, 0..*" Effect

    Inventory *-- "-pickedUpEquipments, 0. .*" Equipment
    Inventory *-- "-craftedAgents, 0..*" Agent
    Inventory *-- "-resources, N" Resource

    GeneticCode *-- "-requirements ,N" Resource
    GeneticCode *-- "-agent, 1" Agent
}

together {
    abstract class Equipment implements Effect {

    }
    class ProtectiveCloak extends Equipment {

    }

    class Bag extends Equipment{

    }
    class Glove extends Equipment {

    }
}

together {
    abstract class Tile {
        #id: int
        +Collect()

    }
    class Laboratory extends Tile {

    }

    class Safehouse extends Tile {

    }
    class Warehouse extends Tile {

    }
    class EmptyTile extends Tile {

    }

    class Map {

    }
    Laboratory *-- "-code, 1" GeneticCode
    Safehouse *-- "-equipment, 1" Equipment
    Warehouse *-- "-collectable, 1" Resource

    Map  *-- "-tiles, L" Tile
    Tile <-- "-neighbours, 1..K" Tile
}

class Controller {

}
Controller *-- "-map, 1" Map
Controller *-- "-players, 2..M" Virologist
Controller *-- "-codes, J" GeneticCode

@enduml